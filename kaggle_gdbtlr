https://blog.csdn.net/weixin_42691585/article/details/109337381


# 1 读取数据
import pandas as pd
df_train=pd.read_csv('./train.csv') 
df_test=pd.read_csv('./test.csv') 


# 2 数据预处理

# 2 数据预处理

# 2.1 去掉ID
df_train.drop(['Id'],axis=1,inplace=True)
df_test.drop(['Id'],axis=1,inplace=True)
# 2.2 test增加label
df_test['Label'] = -1
# 2.3 拼接整体数据，且处理空值为-1
data = pd.concat([df_train, df_test])
data.fillna(-1,inplace=True)
# 2.4 特征列分开处理
continuous_fea = ['I'+str(i+1) for i in range(13)]
category_fea = ['C'+str(i+1) for i in range(26)]


# 3 模型训练
# 3.1 逻辑回归
# 3.1.1 特征处理
# 连续特征归一化
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
for col in continuous_fea:  
    data[col]=scaler.fit_transform(data[col].values.reshape(-1,1))
    
# 离散特征one-hot 编码     
for col in category_fea:
    onehot_feats = pd.get_dummies( data[col],prefix=col)
    data.drop([col],axis=1,inplace=True)
    data=pd.concat([data,onehot_feats],axis=1)

# 3.1.2 拆分训练集和测试集
# 拆分X和Y
train = data[data['Label'] != -1]
target = train.pop('Label')
test = data[data['Label'] == -1]
test.drop(['Label'], axis=1, inplace=True)
#拆分训练集和测试集
from sklearn.model_selection import train_test_split
x_train,x_val,y_train,y_val = train_test_split(train,target,test_size=0.2, random_state=2020)

# 3.1.3 建立模型
from sklearn.linear_model import LogisticRegression

lr = LogisticRegression()
lr.fit(x_train,y_train)

# 返回第i行第j列的概率。第0列为=0的概率，第1列为=1 点击的概率。
from sklearn.metrics import log_loss
tr_logloss=log_loss(y_train, lr.predict_proba(x_train)[:,1])
val_logloss=log_loss(y_val, lr.predict_proba(x_val)[:,1])

print('LR_tr_logloss:',tr_logloss)
print('LR_val_logoss:',val_logloss)

# 3.1.4 模型预测
y_pred=lr.predict_proba(x_val)[:,1]
# 查看钱10个点击的概率
print('LR_predict:',y_pred[:10]) 

# 查看精确率，召回率，F1-score
lr.coef_
lr.intercept_
# pred预测的连续值切分为0-1， 并且计算精确值，召回值，f1，支持数
import numpy as np
y_pred2=np.where(y_pred>0.5,1,0)
print(classification_report(y_val,y_pred2,target_names=['不点击','点击']))

# 输出ROC
from sklearn.metrics import roc_curve
fpr,tpr,thresholds = roc_curve(y_val,y_pred)
print(fpr,tpr,thresholds)

import matplotlib.pyplot as plt
plt.plot(fpr,tpr)
plt.show()

    
# 3.2 GDBT

# 3.3 LR+GDBT


# 4 模型评估

